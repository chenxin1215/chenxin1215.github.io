<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>MybatisPlus查询自动优化sql导致的警告日志打印问题</title>
    <link href="/2023/09/05/MybatisPlus%E6%9F%A5%E8%AF%A2%E8%87%AA%E5%8A%A8%E4%BC%98%E5%8C%96sql%E5%AF%BC%E8%87%B4%E7%9A%84%E8%AD%A6%E5%91%8A%E6%97%A5%E5%BF%97%E6%89%93%E5%8D%B0%E9%97%AE%E9%A2%98/"/>
    <url>/2023/09/05/MybatisPlus%E6%9F%A5%E8%AF%A2%E8%87%AA%E5%8A%A8%E4%BC%98%E5%8C%96sql%E5%AF%BC%E8%87%B4%E7%9A%84%E8%AD%A6%E5%91%8A%E6%97%A5%E5%BF%97%E6%89%93%E5%8D%B0%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h4 id="一、现象"><a href="#一、现象" class="headerlink" title="一、现象"></a>一、现象</h4><p>在使用QueryWrapper中的实体构造方法来构造QueryWrapper后，再调用MybatisPlus内置的分页查询接口；<br>sql可以正常查询，但是会报出以下警告日志：<br>MybatisPlus版本：3.5.2<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1693895781522-3a4d4c8f-d419-4806-a1eb-fb519b56673d.png#averageHue=%232d2d2c&clientId=ufff8bd6c-047b-4&from=paste&height=681&id=uc2e3444b&originHeight=681&originWidth=1883&originalType=binary&ratio=1&rotation=0&showTitle=false&size=152078&status=done&style=none&taskId=u4efda641-8c8f-414e-be01-52ceed24163&title=&width=1883" alt="image.png"></p><h4 id="二、原因"><a href="#二、原因" class="headerlink" title="二、原因"></a>二、原因</h4><p>找到日志位置：<br>PaginationInnerInterceptor类中的autoCountSql方法<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1693897233378-87c628c1-9164-411e-bf6b-474b0f4dbfca.png#averageHue=%232c2c2b&clientId=ufff8bd6c-047b-4&from=paste&height=801&id=ufa6ecd47&originHeight=801&originWidth=1597&originalType=binary&ratio=1&rotation=0&showTitle=false&size=129868&status=done&style=none&taskId=uc82480b3-1653-4e2f-8083-9fbf815d52b&title=&width=1597" alt="image.png"></p><h4 id="三、解决"><a href="#三、解决" class="headerlink" title="三、解决"></a>三、解决</h4><p>方案一：最简单的方法就是不使用Wrapper的构造方法构造查询条件，自己使用代码构造；如下：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1693898412222-c428576e-433a-4373-b9b9-b2eeb5e17f73.png#averageHue=%232f2e2c&clientId=ufff8bd6c-047b-4&from=paste&height=269&id=ueb017203&originHeight=269&originWidth=1017&originalType=binary&ratio=1&rotation=0&showTitle=false&size=56787&status=done&style=none&taskId=u52a2d6db-9950-450b-85aa-94dc3da1d58&title=&width=1017" alt="image.png"></p><p>方案二：如果实在需要使用构造方法构造条件，可以配置不自动优化sql，跳过报错代码；<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1693898534016-36ef5cea-fa64-49c1-b6ac-06dea9e5377a.png#averageHue=%23302d2d&clientId=ufff8bd6c-047b-4&from=paste&height=761&id=ue35aa93d&originHeight=761&originWidth=1379&originalType=binary&ratio=1&rotation=0&showTitle=false&size=126030&status=done&style=none&taskId=u608f4453-d1ac-481f-a58b-b946bd5755e&title=&width=1379" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1693898550289-c8ae56f2-314e-45af-b0f7-8dc6b5d65a8f.png#averageHue=%232f2e2d&clientId=ufff8bd6c-047b-4&from=paste&height=225&id=uba0b1ad4&originHeight=225&originWidth=902&originalType=binary&ratio=1&rotation=0&showTitle=false&size=42748&status=done&style=none&taskId=u71a30183-62d7-4c6a-a8d3-942dd461cf6&title=&width=902" alt="image.png"></p>]]></content>
    
    
    <categories>
      
      <category>编程经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搭建Hexo博客</title>
    <link href="/2023/09/03/%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2/"/>
    <url>/2023/09/03/%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="hexo是什么"><a href="#hexo是什么" class="headerlink" title="hexo是什么"></a>hexo是什么</h1><p><a href="https://hexo.io/zh-cn/">Hexo</a>是一个博客框架，使用markdown语法写作，一键编译生成静态文件，一键部署到github或gitlab等。</p><h1 id="初始化hexo博客项目"><a href="#初始化hexo博客项目" class="headerlink" title="初始化hexo博客项目"></a>初始化hexo博客项目</h1><p>首先安装node环境，然后全局安装 hexo-cli ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">cnpm install -g hexo-cli<br></code></pre></td></tr></table></figure><p>安装成功后，使用 hexo init 命令初始化项目：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init myblog  <span class="hljs-comment"># 会在当前目录下创建一个myblog目录</span><br></code></pre></td></tr></table></figure><h1 id="创作文章"><a href="#创作文章" class="headerlink" title="创作文章"></a>创作文章</h1><p>进入myblog目录，执行以下命令可以创建一篇新文章，标题为test：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new <span class="hljs-built_in">test</span><br></code></pre></td></tr></table></figure><p>hexo会在source&#x2F;_posts目录下创建一个test.md文件，我们在这里使用markdown语法写博客即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">---<br>title: <span class="hljs-built_in">test</span><br><span class="hljs-built_in">date</span>: 2023-09-02 21:17:39<br>tags: <br>- hexo<br>- 博客<br>categories: 教程<br>---<br><br><span class="hljs-comment"># 一级标题</span><br><br><span class="hljs-comment">## 二级标题</span><br><br>这里开始我们的写作吧<br></code></pre></td></tr></table></figure><p>上面文件最上方以—分隔的区域，用于指定文章属性（<a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter | Hexo</a>），常用的属性就是title, date, tag, categories，分别指定文章标题、建立日期、标签和分类。其中标题和建立日期都是自动生成的，我们不用管。tag和categories一般是由我们自己设置的。</p><p><strong>hexo中的分类categories和标签tag的区别在于：categories编译后对应的是一个分类目录，而tag只是一个标记：</strong></p><p><strong>一篇文章只能包含一个分类，但是可以包含多个标签。</strong><br>我们使用hexo new &lt;文章名&gt;命令创建的文章，是被放到了source&#x2F;_posts目录下。事实上，post是hexo文章的一种布局，<strong>hexo一共支持3种布局方式：post、page、draft</strong>，使用下面的命令可以创建指定布局的文章：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new post &lt;文章名&gt;<br>hexo new page &lt;文章名&gt;<br>hexo new draft &lt;文章名&gt;<br></code></pre></td></tr></table></figure><p>其中post布局的文章会被创建到source&#x2F;_posts目录下，表示这是要被发表的文章；page布局的文章会在source目录下创建一个以&lt;文章名&gt;命名的文件夹，在文件夹下再创建一个index.md，这是个啥意思我也不懂，但是我们一般不用它，因为我们已经使用了tag和categories，就没法使用page了；draft布局的文章会被创建到source&#x2F;_drafts目录下，表示这是一个草稿，当使用hexo generate命令编译时，不会被编译成静态页面。<br><img src="/2023/09/03/%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2/image.png" alt="img"><br>如果我们想预览草稿，可以在编译时添加–draft参数：hexo generate –draft。如果我们想把草稿发布，可以使用hexo publish &lt;文章名&gt;命令。<br>写完文章后，我们先使用hexo clean命令清除之前编译的站点页面。<br>然后使用hexo generate命令编译出静态站点页面（保存在source&#x2F;public中）。<br>最后使用hexo server命令就可以在本地预览：<br><img src="/2023/09/03/%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2/image1.png" alt="img"><br>访问<a href="http://localhost:4000：">http://localhost:4000：</a><br><img src="/2023/09/03/%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2/image2.png" alt="img"><br>小提示：在hexo3中新增了hexo-server，支持hexo监视文件变动并自动更新，无需重启服务器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">cnpm install hexo-server --save<br>hexo server<br></code></pre></td></tr></table></figure><h1 id="部署到Github"><a href="#部署到Github" class="headerlink" title="部署到Github"></a>部署到Github</h1><p>hexo最牛逼的地方在于，可以把博客部署到github、gitlab、gitee、gitcode等git代码网站上，利用它们提供的pages服务提供博客服务。<br>这是因为hexo编译生成的是一个静态网站，而pages服务就是提供静态网站访问服务的。</p><p>1、创建一个github仓库，开通pages服务。<br>2、安装 <a href="https://github.com/hexojs/hexo-deployer-git">hexojs&#x2F;hexo-deployer-git: Git deployer plugin for Hexo. (github.com)</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">cnpm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><p>3、修改博客配置（_config.yml）:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">git@github.com:xxxx/xxxx.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br></code></pre></td></tr></table></figure><p>4、生成站点文件并推送至远程仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean  <span class="hljs-comment"># 保险起见，每次我们都清空一下</span><br>hexo deploy --generate<br></code></pre></td></tr></table></figure><p>5、登入 Github&#x2F;BitBucket&#x2F;Gitlab，请在库设置（Repository Settings）中将默认分支设置为_config.yml配置中的分支名称。稍等片刻（github后台在使用Travis CI自动部署），您的站点就会显示在您的Github Pages中。<br>此外，如果您的 Github Pages 需要使用 CNAME 文件自定义域名，请将 CNAME 文件置于 source 目录下，只有这样 hexo deploy 才能将 CNAME 文件一并推送至部署分支。<br>更多参考：<a href="https://hexo.io/zh-cn/docs/one-command-deployment">部署 | Hexo</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>虚拟机安装与网络配置</title>
    <link href="/2023/09/03/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85%E4%B8%8E%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/"/>
    <url>/2023/09/03/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85%E4%B8%8E%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><h4 id="vm软件"><a href="#vm软件" class="headerlink" title="vm软件"></a>vm软件</h4><p>软件官网下载地址：<a href="https://customerconnect.vmware.com/cn/downloads/#all_products">https://customerconnect.vmware.com/cn/downloads/#all_products</a><br>windows版本：搜索workstation<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1692691373344-344c49a1-5917-44b3-a034-2ca289e0c8d0.png#averageHue=%23fdfcfc&clientId=u9825aa6a-e58d-4&from=paste&height=805&id=sAEpl&originHeight=805&originWidth=1771&originalType=binary&ratio=1&rotation=0&showTitle=false&size=114094&status=done&style=none&taskId=u253efc1c-881f-48e2-8196-e4e1d951c90&title=&width=1771" alt="image.png"><br>许可证：YF390-0HF8P-M81RQ-2DXQE-M2UT6</p><p>mac版本：搜索fusion<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1692691473572-6b13e519-96e8-4b54-ba87-e17c26d787dd.png#averageHue=%23fcfcfc&clientId=u9825aa6a-e58d-4&from=paste&height=745&id=ubf79069b&originHeight=745&originWidth=1804&originalType=binary&ratio=1&rotation=0&showTitle=false&size=108898&status=done&style=none&taskId=ua63696c9-bb9c-44ee-ba92-6aff2d2201e&title=&width=1804" alt="image.png"></p><h4 id="镜像文件"><a href="#镜像文件" class="headerlink" title="镜像文件"></a>镜像文件</h4><p>centos镜像下载地址：<a href="http://mirrors.aliyun.com/centos/7/isos/x86_64/">http://mirrors.aliyun.com/centos/7/isos/x86_64&#x2F;</a><br><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1692756238871-fc30b912-6403-46f5-ac88-8774a4825bb5.png#averageHue=%23fbf8f6&clientId=ud4ab4805-1f05-4&from=paste&height=812&id=u8c76ba13&originHeight=812&originWidth=1136&originalType=binary&ratio=1&rotation=0&showTitle=false&size=99013&status=done&style=none&taskId=u3b5959e0-0ed9-4ea5-b3bf-3c6e4f284c3&title=&width=1136" alt="image.png"></p><h3 id="一、创建虚拟机，以centos为例"><a href="#一、创建虚拟机，以centos为例" class="headerlink" title="一、创建虚拟机，以centos为例"></a>一、创建虚拟机，以centos为例</h3><ol><li>新建虚拟机 选择自定义</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1692756352606-f58c7801-2110-4376-a1ce-1323af61f982.png#averageHue=%23e2e1e1&clientId=ud4ab4805-1f05-4&from=paste&height=455&id=r7JBH&originHeight=455&originWidth=518&originalType=binary&ratio=1&rotation=0&showTitle=false&size=34479&status=done&style=none&taskId=ufb994087-38b8-437b-8f77-d90eaf140d6&title=&width=518" alt="image.png"></p><ol start="2"><li>硬盘兼容性 选择默认即可</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1692756417917-2306242b-3dbd-4e2f-b8bf-1daab077b149.png#averageHue=%23ebebeb&clientId=ud4ab4805-1f05-4&from=paste&height=424&id=u6f8ad3e9&originHeight=424&originWidth=500&originalType=binary&ratio=1&rotation=0&showTitle=false&size=21147&status=done&style=none&taskId=u389d412b-fb06-43c5-8fa0-8282b7a7498&title=&width=500" alt="image.png"></p><ol start="3"><li>装客户机操作系统 选择稍后安装（因为tfwf要在虚拟机安装完成之后，把不需要的硬件删除，所以选择稍后安装操作系统）</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1692756478156-9f56a5f7-4767-4762-97f1-c1e40a3b22b3.png#averageHue=%23e5e5e5&clientId=ud4ab4805-1f05-4&from=paste&height=443&id=ud86d3f40&originHeight=443&originWidth=503&originalType=binary&ratio=1&rotation=0&showTitle=false&size=23090&status=done&style=none&taskId=uedeffcb9-ebad-4d1b-bd10-40f2efd35be&title=&width=503" alt="image.png"></p><ol start="4"><li>选择客户机操作系统 选择linux -&gt; CentOS 7 64位； 注意对应下载的镜像文件版本</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1692756608075-340e1611-a438-45e0-a423-49bf1946e32b.png#averageHue=%23cac9c8&clientId=ud4ab4805-1f05-4&from=paste&height=618&id=udf187c3c&originHeight=618&originWidth=591&originalType=binary&ratio=1&rotation=0&showTitle=false&size=50002&status=done&style=none&taskId=u107d371e-22cf-4d48-8790-4e7c3c1206c&title=&width=591" alt="image.png"></p><ol start="5"><li>命名虚拟机、位置； 最好把位置放在一个同一的文件夹</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1692756774172-d6ad7d65-368c-4168-be0a-b6c9605babaa.png#averageHue=%23e8e8e8&clientId=ud4ab4805-1f05-4&from=paste&height=432&id=u4745b407&originHeight=432&originWidth=512&originalType=binary&ratio=1&rotation=0&showTitle=false&size=17884&status=done&style=none&taskId=u88cfb5a8-56d4-4db4-bba6-f2afe61c61c&title=&width=512" alt="image.png"></p><ol start="6"><li>处理器配置（注意不能超过主机的核心数）</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1692756835449-5ab8a05b-3270-46bd-a0d2-8366d1382d1a.png#averageHue=%23e7e6e6&clientId=ud4ab4805-1f05-4&from=paste&height=439&id=ucb0fd00f&originHeight=439&originWidth=509&originalType=binary&ratio=1&rotation=0&showTitle=false&size=16517&status=done&style=none&taskId=u911ac449-636b-4f13-a204-9c6a4fa2481&title=&width=509" alt="image.png"></p><ol start="7"><li>内存配置，一般配置2G既可，如果需要安装Gitlab、jenkins之类的 必须增大内存</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1692756948099-cdc16b3c-e48b-47a7-838f-276f4d76de2c.png#averageHue=%23dddddd&clientId=ud4ab4805-1f05-4&from=paste&height=443&id=u93824469&originHeight=443&originWidth=523&originalType=binary&ratio=1&rotation=0&showTitle=false&size=26662&status=done&style=none&taskId=ud8aef763-5383-4dba-b979-eb7e9d07a8b&title=&width=523" alt="image.png"></p><ol start="8"><li>网络配置 选择桥接网络（虚拟机可以与主机使用同一网络）</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1692757010368-4ea50611-414b-4771-a843-21958e939019.png#averageHue=%23e8e8e7&clientId=ud4ab4805-1f05-4&from=paste&height=433&id=u96a51dc5&originHeight=433&originWidth=499&originalType=binary&ratio=1&rotation=0&showTitle=false&size=22276&status=done&style=none&taskId=udd00f65f-b87f-4e13-a5b6-358340b1e37&title=&width=499" alt="image.png"></p><ol start="9"><li>选择I&#x2F;O控制器类型 默认选项； 磁盘类型 默认选项</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1692757330880-2c87a3b5-4fda-4a88-8a38-78ea4c254336.png#averageHue=%23e3e3e2&clientId=ud4ab4805-1f05-4&from=paste&height=436&id=u10c11d93&originHeight=436&originWidth=515&originalType=binary&ratio=1&rotation=0&showTitle=false&size=19977&status=done&style=none&taskId=u92eaaccb-91c2-458a-9e54-90c08e22c95&title=&width=515" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1692757364285-982a3c0a-27be-427e-82a4-2ada1aab1995.png#averageHue=%23d0d0d0&clientId=ud4ab4805-1f05-4&from=paste&height=476&id=uc16cb689&originHeight=476&originWidth=532&originalType=binary&ratio=1&rotation=0&showTitle=false&size=21357&status=done&style=none&taskId=u8578458a-d9d5-4c17-a6f2-62572597ebb&title=&width=532" alt="image.png"></p><ol start="10"><li>选择磁盘 -&gt; 创建新的磁盘</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1692757397431-31d0ca20-6b19-4f14-95e2-bf75548efdb0.png#averageHue=%23e6e6e6&clientId=ud4ab4805-1f05-4&from=paste&height=427&id=u5fcbad2d&originHeight=427&originWidth=501&originalType=binary&ratio=1&rotation=0&showTitle=false&size=21641&status=done&style=none&taskId=u4d26c419-ef3a-4a5f-b606-609ec57949a&title=&width=501" alt="image.png"></p><ol start="11"><li>指定磁盘容量（这里是最大容量 虚拟的 不占主机内存）</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1692757517842-1e04c8da-a97d-4743-851e-a270cd41e674.png#averageHue=%23e6e6e6&clientId=ud4ab4805-1f05-4&from=paste&height=434&id=uacaaaea4&originHeight=434&originWidth=492&originalType=binary&ratio=1&rotation=0&showTitle=false&size=25112&status=done&style=none&taskId=u65b73872-f7df-4f56-b107-64088be01e6&title=&width=492" alt="image.png"></p><ol start="12"><li>指定磁盘文件（最好不使用中文）</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1692757569255-086b7860-3056-4aee-85bf-7bfc4ac9a5e1.png#averageHue=%23e6e5e5&clientId=ud4ab4805-1f05-4&from=paste&height=435&id=uf4d9e356&originHeight=435&originWidth=516&originalType=binary&ratio=1&rotation=0&showTitle=false&size=18697&status=done&style=none&taskId=u6fe2515c-e0db-4eec-813d-dbc84505c95&title=&width=516" alt="image.png"></p><ol start="13"><li>自定义硬件  移除USB控制器、声卡、打印机（这样启动快一点）</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1692757630601-21cf6370-902d-4918-a441-f95e534c6fe9.png#averageHue=%23dcdbdb&clientId=ud4ab4805-1f05-4&from=paste&height=449&id=u9338bbd1&originHeight=449&originWidth=530&originalType=binary&ratio=1&rotation=0&showTitle=false&size=27062&status=done&style=none&taskId=u48f293da-a3c4-41a5-88e5-c589112035d&title=&width=530" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1692757662161-9202f9ae-6967-43e1-a6e5-68f1e8652cad.png#averageHue=%23f1f1f1&clientId=ud4ab4805-1f05-4&from=paste&height=598&id=u095b09f0&originHeight=796&originWidth=752&originalType=binary&ratio=1&rotation=0&showTitle=false&size=54348&status=done&style=none&taskId=u731c9e1b-ce22-40b2-9ff3-acbbd631a4d&title=&width=565" alt="image.png"></p><ol start="14"><li>安装镜像</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1692757759341-24c8478a-d2d2-4acf-a3a2-1fa447295637.png#averageHue=%23242323&clientId=ud4ab4805-1f05-4&from=paste&height=601&id=u0915cb44&originHeight=601&originWidth=601&originalType=binary&ratio=1&rotation=0&showTitle=false&size=38484&status=done&style=none&taskId=u603323c3-435e-4e31-a180-19ca7b7c3ef&title=&width=601" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1692757814456-31841fa5-d66c-487b-9869-d7e98ef15bf1.png#averageHue=%23f7f7f7&clientId=ud4ab4805-1f05-4&from=paste&height=457&id=PBur7&originHeight=506&originWidth=723&originalType=binary&ratio=1&rotation=0&showTitle=false&size=32557&status=done&style=none&taskId=ud11103b9-b7d0-4098-8b55-ddcbeef7862&title=&width=653" alt="image.png"></p><ol start="15"><li>开始安装虚拟机系统</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1692757852711-95b1d75c-31c2-45af-9194-6d9d71e8d220.png#averageHue=%23282727&clientId=ud4ab4805-1f05-4&from=paste&height=561&id=ua3b01147&originHeight=561&originWidth=529&originalType=binary&ratio=1&rotation=0&showTitle=false&size=35247&status=done&style=none&taskId=uddab1787-4b0e-4975-bb80-9e231ed459f&title=&width=529" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1692757894889-d1ae543f-8c29-4d96-97ec-f2d1e207e8d2.png#averageHue=%23000000&clientId=ud4ab4805-1f05-4&from=paste&height=440&id=u6e79ec94&originHeight=480&originWidth=640&originalType=binary&ratio=1&rotation=0&showTitle=false&size=14004&status=done&style=none&taskId=u12ab609f-ec6c-4462-848a-7356e07ac36&title=&width=587" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1692758035707-54c92663-7731-4bac-8423-f2c5620d70f6.png#averageHue=%23e7e7e5&clientId=ud4ab4805-1f05-4&from=paste&height=467&id=u90766f42&originHeight=600&originWidth=800&originalType=binary&ratio=1&rotation=0&showTitle=false&size=150063&status=done&style=none&taskId=u8cca104e-456c-4099-b911-3a894138085&title=&width=623" alt="image.png"></p><ol start="16"><li>设置时区</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1692758119352-4d040f83-8e72-4926-a5f7-990258804e52.png#averageHue=%23e7e7e6&clientId=ud4ab4805-1f05-4&from=paste&height=485&id=qcOpH&originHeight=600&originWidth=800&originalType=binary&ratio=1&rotation=0&showTitle=false&size=149336&status=done&style=none&taskId=ub4a84186-1af3-4650-ac28-ed12c72a904&title=&width=647" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1692758162479-84d15c62-4fee-4b86-b684-2298e053dfa5.png#averageHue=%23abd68c&clientId=ud4ab4805-1f05-4&from=paste&height=485&id=L7ts4&originHeight=600&originWidth=800&originalType=binary&ratio=1&rotation=0&showTitle=false&size=205111&status=done&style=none&taskId=ubbc9df8a-2e24-44c1-af2f-3aed2765ffd&title=&width=647" alt="image.png"></p><ol start="17"><li>系统分区</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1692758263370-e865289e-a96d-4f01-98c6-4a4660a61496.png#averageHue=%23e7e7e6&clientId=ud4ab4805-1f05-4&from=paste&height=479&id=asK4g&originHeight=600&originWidth=800&originalType=binary&ratio=1&rotation=0&showTitle=false&size=151154&status=done&style=none&taskId=u2a95224d-03c0-43bc-a1ad-e734136622e&title=&width=639" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1692758315297-e6865dcc-9d4d-4630-a7c5-ac6a6975e5da.png#averageHue=%23e6e6e5&clientId=ud4ab4805-1f05-4&from=paste&height=497&id=RENq2&originHeight=600&originWidth=800&originalType=binary&ratio=1&rotation=0&showTitle=false&size=109163&status=done&style=none&taskId=u60c8cb93-fa41-403b-8c9f-0e976d9ca4c&title=&width=663" alt="image.png"></p><ol start="18"><li>配置本机地址</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1692758649051-47360b5e-6cd2-4c06-9406-7ca9164df577.png#averageHue=%23e7e7e6&clientId=ud4ab4805-1f05-4&from=paste&height=496&id=Rdxlo&originHeight=600&originWidth=800&originalType=binary&ratio=1&rotation=0&showTitle=false&size=155525&status=done&style=none&taskId=udff9233a-0629-4588-8cd8-8ddd645c579&title=&width=661" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1692758631854-5dead794-7105-443c-8a46-effc480bd54d.png#averageHue=%23e6e6e5&clientId=ud4ab4805-1f05-4&from=paste&height=500&id=Gka9w&originHeight=600&originWidth=800&originalType=binary&ratio=1&rotation=0&showTitle=false&size=105334&status=done&style=none&taskId=u92b30da0-75eb-4747-bde0-2b5b3055738&title=&width=667" alt="image.png"></p><ol start="19"><li>设置root管理员密码</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1692758806904-1600c7cb-fae7-4c27-a190-fe418f4718c7.png#averageHue=%23e7e7e6&clientId=ud4ab4805-1f05-4&from=paste&height=474&id=u7651fd6e&originHeight=600&originWidth=800&originalType=binary&ratio=1&rotation=0&showTitle=false&size=156206&status=done&style=none&taskId=ud24778ea-3305-4961-88ff-8b4dc02e6d2&title=&width=632" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1692758828437-56244938-7ea5-4260-9a83-83cf9d888d0a.png#averageHue=%23e7e7e6&clientId=ud4ab4805-1f05-4&from=paste&height=476&id=ubd62b643&originHeight=600&originWidth=800&originalType=binary&ratio=1&rotation=0&showTitle=false&size=243302&status=done&style=none&taskId=udac717b9-3616-494f-abae-02a520af264&title=&width=635" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1692758864273-e9e53966-8541-4e16-a029-1677013f2c34.png#averageHue=%23e7e7e6&clientId=ud4ab4805-1f05-4&from=paste&height=268&id=u71d1fcf0&originHeight=327&originWidth=803&originalType=binary&ratio=1&rotation=0&showTitle=false&size=65785&status=done&style=none&taskId=u270b790f-b48f-4eb9-9c24-74c805148f5&title=&width=659" alt="image.png"></p><ol start="20"><li>重启后出现这个页面 代表安装成功， 使用root账号登录即可</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1692761553268-62da89de-f571-486d-a8ed-c6425ad85251.png#averageHue=%230e0e0e&clientId=ud4ab4805-1f05-4&from=paste&height=252&id=u5d9f1b22&originHeight=285&originWidth=775&originalType=binary&ratio=1&rotation=0&showTitle=false&size=15227&status=done&style=none&taskId=u9de6e016-6e8a-4326-8abd-060d0269d4d&title=&width=685" alt="image.png"></p><h3 id="二、搭建VMnet8虚拟局域网"><a href="#二、搭建VMnet8虚拟局域网" class="headerlink" title="二、搭建VMnet8虚拟局域网"></a>二、搭建VMnet8虚拟局域网</h3><p><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1683093100772-7a709c27-105c-41e6-948f-2de9625bbed3.png#averageHue=%23f2eded&clientId=ud910ff7d-582c-4&from=paste&id=u6d5185fb&originHeight=738&originWidth=839&originalType=url&ratio=1.25&rotation=0&showTitle=false&status=done&style=none&taskId=u8a2cd8ae-8d3a-4ec9-a594-20b05a8d8de&title="><br>打开VMware软件，点击编辑，点击列表中的虚拟网络编辑器<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1683093109246-ad98ee25-0826-43e2-b916-ed9a7a33555c.png#averageHue=%23474746&clientId=ud910ff7d-582c-4&from=paste&id=ufebd50d5&originHeight=712&originWidth=1003&originalType=url&ratio=1.25&rotation=0&showTitle=false&status=done&style=none&taskId=u7d994692-94fd-4170-9b93-54558f1dfb9&title="><br>进入虚拟网络编辑器页面</p><ul><li>选择NAT模式</li><li>勾选将主机虚拟适配器连接到此网络</li><li>取消DHCP服务</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1683093128021-de0c4d22-7691-401e-9968-a83db1d88e5d.png#averageHue=%23e9e6e5&clientId=ud910ff7d-582c-4&from=paste&id=ue544ecf8&originHeight=666&originWidth=730&originalType=url&ratio=1.25&rotation=0&showTitle=false&status=done&style=none&taskId=ucd1c18ea-3d9b-41fa-ac09-2469d2072f8&title="><br>子网IP和网关IP都先记下来<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1683093136080-e7f194e8-4b32-4aa4-8e4d-4bcc33e19dcf.png#averageHue=%23ecebeb&clientId=ud910ff7d-582c-4&from=paste&id=u2c21878d&originHeight=712&originWidth=638&originalType=url&ratio=1.25&rotation=0&showTitle=false&status=done&style=none&taskId=ufcbe4730-6786-4de2-9a5a-2074ecf9467&title="></p><h3 id="三、CentOS系统配置"><a href="#三、CentOS系统配置" class="headerlink" title="三、CentOS系统配置"></a>三、CentOS系统配置</h3><h4 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h4><h5 id="1、配置ip地址等信息在-x2F-etc-x2F-sysconfig-x2F-network-scripts-x2F-ifcfg-ens33"><a href="#1、配置ip地址等信息在-x2F-etc-x2F-sysconfig-x2F-network-scripts-x2F-ifcfg-ens33" class="headerlink" title="1、配置ip地址等信息在&#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-ens33"></a>1、配置ip地址等信息在&#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-ens33</h5><p><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1683093183867-5ebab915-207c-4d89-9841-2873a598f955.png#averageHue=%23070707&clientId=ud910ff7d-582c-4&from=paste&id=u5c3a3c90&originHeight=141&originWidth=765&originalType=url&ratio=1.25&rotation=0&showTitle=false&status=done&style=none&taskId=udc6979c2-aeab-4958-beba-0a0dbe2b117&title="></p><blockquote><p>vi   &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-ens33&#x2F;</p></blockquote><p>配置如下：（若原文件无引号，则不加引号，没有的就新增）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">TYPE=&quot;Ethernet&quot;   # 网络类型为以太网<br>BOOTPROTO=&quot;static&quot;  # 手动分配ip<br>NAME=&quot;ens33&quot;  # 网卡设备名，设备名一定要跟文件名一致<br>DEVICE=&quot;ens33&quot;  # 网卡设备名，设备名一定要跟文件名一致<br>ONBOOT=&quot;yes&quot;  # 该网卡是否随网络服务启动<br>IPADDR=&quot;192.168.×.×&quot;  # 该网卡ip地址就是你要配置的固定IP<br>GATEWAY=&quot;192.168.×.×&quot;   # 网关<br>NETMASK=&quot;255.255.255.0&quot;   # 子网掩码<br>DNS1=&quot;8.8.8.8&quot;    # DNS，8.8.8.8为Google提供的免费DNS服务器的IP地址<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1692771063105-74ba114d-b886-4bb9-8bd5-52d658b044f4.png#averageHue=%23121212&clientId=ud4ab4805-1f05-4&from=paste&height=630&id=uff692fd5&originHeight=630&originWidth=867&originalType=binary&ratio=1&rotation=0&showTitle=false&size=38378&status=done&style=none&taskId=ub211bb01-4e6b-45ff-924d-38de51006c7&title=&width=867" alt="image.png"></p><h5 id="2-、配置网络工作"><a href="#2-、配置网络工作" class="headerlink" title="2 、配置网络工作"></a>2 、配置网络工作</h5><pre><code class="hljs">在/etc/sysconfig/network文件里增加如下配置NETWORKING=yes</code></pre><h5 id="3、配置公共DNS服务-可选-（不用选）"><a href="#3、配置公共DNS服务-可选-（不用选）" class="headerlink" title="3、配置公共DNS服务(可选)（不用选）"></a>3、配置公共DNS服务(可选)（不用选）</h5><pre><code class="hljs">在/etc/resolv.conf文件里增加如下配置nameserver 8.8.8.8</code></pre><h5 id="4、关闭防护墙"><a href="#4、关闭防护墙" class="headerlink" title="4、关闭防护墙"></a>4、关闭防护墙</h5><pre><code class="hljs">systemctl stop firewalld # 临时关闭防火墙systemctl disable firewalld # 禁止开机启动</code></pre><h5 id="5、重启网络服务"><a href="#5、重启网络服务" class="headerlink" title="5、重启网络服务"></a>5、重启网络服务</h5><pre><code class="hljs">service network restart</code></pre><h5 id="6、查看网络服务"><a href="#6、查看网络服务" class="headerlink" title="6、查看网络服务"></a>6、查看网络服务</h5><pre><code class="hljs">ping 163.com没有问题就可以使用服务器连接工具连接虚拟机了</code></pre><h3 id="四、连接虚拟机"><a href="#四、连接虚拟机" class="headerlink" title="四、连接虚拟机"></a>四、连接虚拟机</h3><p>使用刚刚配置的网卡ip地址 （IPADDR）<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1692771094821-4e5af1a7-c0f3-4f82-ab3e-a1697cbd708c.png#averageHue=%23f1f0ef&clientId=ud4ab4805-1f05-4&from=paste&height=648&id=u55955869&originHeight=648&originWidth=877&originalType=binary&ratio=1&rotation=0&showTitle=false&size=91375&status=done&style=none&taskId=u444a14da-cf64-407e-9962-7cc328e5668&title=&width=877" alt="image.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/29411486/1692771113507-07d99108-c2c4-47a5-84ce-cd6c47ffd2b1.png#averageHue=%2392e19b&clientId=ud4ab4805-1f05-4&from=paste&height=641&id=u637ebde9&originHeight=641&originWidth=1018&originalType=binary&ratio=1&rotation=0&showTitle=false&size=450283&status=done&style=none&taskId=u56c78db3-be2f-4439-b583-76b43f83cd6&title=&width=1018" alt="image.png"><br>接下来就可以愉快的使用啦！</p>]]></content>
    
    
    <categories>
      
      <category>编程必备</category>
      
    </categories>
    
    
    <tags>
      
      <tag>虚拟机</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python程序docker实战部署</title>
    <link href="/2023/09/03/Python%E7%A8%8B%E5%BA%8Fdocker%E5%AE%9E%E6%88%98%E9%83%A8%E7%BD%B2/"/>
    <url>/2023/09/03/Python%E7%A8%8B%E5%BA%8Fdocker%E5%AE%9E%E6%88%98%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<p>本文介绍python程序如何制作成docker镜像，并部署在线上服务器上。</p><h3 id="一、python基础认知"><a href="#一、python基础认知" class="headerlink" title="一、python基础认知"></a>一、python基础认知</h3><h4 id="1-包"><a href="#1-包" class="headerlink" title="1. 包"></a>1. 包</h4><p>在一个文件夹中存在一个__init__.py文件，python就会认为这个文件夹是一个包<br>可以在__init__.py文件中做一些初始化的配置、操作等</p><h4 id="2-程序执行与主函数"><a href="#2-程序执行与主函数" class="headerlink" title="2. 程序执行与主函数"></a>2. 程序执行与主函数</h4><p>Python是一种解释型编程语言。<br>Python程序没有显式的”main()”函数入口点。<br>在Python中，程序的执行从文件的顶部开始，逐行执行直到文件的末尾。</p><h4 id="3-Flask应用-web服务"><a href="#3-Flask应用-web服务" class="headerlink" title="3. Flask应用-web服务"></a>3. Flask应用-web服务</h4><p>Flask是Python编程语言中的一个轻量级Web应用框架。它被设计成简单、易用、灵活的框架，用于快速开发Web应用程序和API。<br>语法示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask<br><br>app = Flask(__name__)<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">hello_world</span>():<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;Hello, World!&#x27;</span><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run(host=<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, port=<span class="hljs-number">5000</span>) <span class="hljs-comment"># 0.0.0.0表示支持任意host</span><br><br></code></pre></td></tr></table></figure><h3 id="二、docker镜像制作"><a href="#二、docker镜像制作" class="headerlink" title="二、docker镜像制作"></a>二、docker镜像制作</h3><p>编写完python程序后 确认程序可执行。就可以制作docker镜像了</p><h5 id="1-requirements-txt文件"><a href="#1-requirements-txt文件" class="headerlink" title="1. requirements.txt文件"></a>1. requirements.txt文件</h5><p>在Python中，requirements.txt是一个文本文件，通常用于列出项目所依赖的第三方Python包及其版本信息。<br>这个文件是为了方便项目的依赖管理而创建的。如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 应用所需的Python依赖库</span><br>Flask==<span class="hljs-number">2.3</span><span class="hljs-number">.2</span><br>mysql-connector==<span class="hljs-number">2.2</span><span class="hljs-number">.9</span><br>psycopg2-binary==<span class="hljs-number">2.9</span><span class="hljs-number">.6</span><br></code></pre></td></tr></table></figure><h5 id="2-Dockerfile文件"><a href="#2-Dockerfile文件" class="headerlink" title="2. Dockerfile文件"></a>2. Dockerfile文件</h5><p>在项目的根目录新建Dockerfile文件如下，注意Dockerfile没有文件后缀名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 使用轻量级的基础镜像 打出的镜像包才不会很大</span><br><span class="hljs-comment"># 官方的完整版镜像包打出来都是1G的大小</span><br>FROM python:<span class="hljs-number">3.9</span>-alpine<br><br><span class="hljs-comment"># 设置工作目录</span><br>WORKDIR /app<br><br><span class="hljs-comment"># 安装依赖库</span><br>RUN pip install --no-cache-<span class="hljs-built_in">dir</span> --upgrade pip<br><br><span class="hljs-comment"># 将应用代码复制到镜像中 .表示当前目录 注意清理当前目录的不需要的文件 特别是大文件</span><br>COPY . /app<br><br><span class="hljs-comment"># 安装应用的依赖 注意变更requirements.txt的文件位置</span><br>RUN pip install --no-cache-<span class="hljs-built_in">dir</span> -r ./resource/requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple<br><br><span class="hljs-comment"># 设置环境变量</span><br>ENV MYSQL_HOST <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><br>ENV MYSQL_PORT <span class="hljs-number">3306</span><br>ENV MYSQL_USER root<br>ENV MYSQL_PASSWORD root<br>ENV MYSQL_DATABASE data_base<br><br><span class="hljs-comment"># 暴露Flask应用的端口</span><br>EXPOSE <span class="hljs-number">5000</span><br><br><span class="hljs-comment"># 启动Flask应用</span><br>ENTRYPOINT [<span class="hljs-string">&quot;python3&quot;</span>, <span class="hljs-string">&quot;-u&quot;</span>, <span class="hljs-string">&quot;./project/run.py&quot;</span>,<span class="hljs-string">&quot;runserver&quot;</span>,<span class="hljs-string">&quot;0.0.0.0:5000&quot;</span>, <span class="hljs-string">&quot;--noreload&quot;</span>]<br></code></pre></td></tr></table></figure><h5 id="3-镜像制作"><a href="#3-镜像制作" class="headerlink" title="3. 镜像制作"></a>3. 镜像制作</h5><p>在根目录下执行以下命令（docker环境下）<br>其中docker.xxx.cn为私服的域名，如果没有可以不写 即 test-demo:1.0.0；这里不写就是默认下载官方的<br>注意最后一个 . 是不能少的 </p><blockquote><p> docker build -f Dockerfile -t docker.xxx.cn&#x2F;test-demo:1.0.0 </p></blockquote><h3 id="三、部署"><a href="#三、部署" class="headerlink" title="三、部署"></a>三、部署</h3><h5 id="1-网络私服部署"><a href="#1-网络私服部署" class="headerlink" title="1. 网络私服部署"></a>1. 网络私服部署</h5><p>将本地镜像上传到私服</p><blockquote><p>docker push docker.xxx.cn&#x2F;test-demo:1.0.0</p></blockquote><p>在目的服务器下载镜像</p><blockquote><p>docker pull docker.xxx.cn&#x2F;test-demo:1.0.0</p></blockquote><p>执行 docker run 命令启动容器</p><h5 id="2-手动上传部署"><a href="#2-手动上传部署" class="headerlink" title="2. 手动上传部署"></a>2. 手动上传部署</h5><p>将本地镜像打包成压缩包</p><blockquote><p>docker save -o test-demo.tar test-demo:1.0.0</p></blockquote><p>然后将压缩包传到服务器中，执行加载命令</p><blockquote><p>docker load -i test-demo.tar</p></blockquote><p>执行 docker run 命令启动容器</p>]]></content>
    
    
    <categories>
      
      <category>架构</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于BigDecimal处理浮点类型出现的问题</title>
    <link href="/2023/02/08/%E5%85%B3%E4%BA%8EBigDecimal%E5%A4%84%E7%90%86%E6%B5%AE%E7%82%B9%E7%B1%BB%E5%9E%8B%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <url>/2023/02/08/%E5%85%B3%E4%BA%8EBigDecimal%E5%A4%84%E7%90%86%E6%B5%AE%E7%82%B9%E7%B1%BB%E5%9E%8B%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>问题：new BigDecimal(3.9) 出现精度问题 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">BigDecimal</span> <span class="hljs-variable">tempModelData</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigDecimal</span>(<span class="hljs-number">1</span>).multiply(<span class="hljs-keyword">new</span> <span class="hljs-title class_">BigDecimal</span>(<span class="hljs-number">3.9</span>));<br>System.out.println(<span class="hljs-string">&quot;tempModelData = &quot;</span> + tempModelData);<br><br><span class="hljs-comment">// 输出：tempModelData = 3.899999999999999911182158029987476766109466552734375               </span><br></code></pre></td></tr></table></figure><p>原因是3.9是浮点型，自带精度，在new BigdDecimal会把精度带过去</p><p>处理：将new BigDecimal(3.9) 改为 <strong>new BigDecimal(“3.9”)</strong>  字符类型不会带精度</p>]]></content>
    
    
    <categories>
      
      <category>编程经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>List复杂对象条件排序</title>
    <link href="/2023/02/08/List%E5%A4%8D%E6%9D%82%E5%AF%B9%E8%B1%A1%E6%9D%A1%E4%BB%B6%E6%8E%92%E5%BA%8F/"/>
    <url>/2023/02/08/List%E5%A4%8D%E6%9D%82%E5%AF%B9%E8%B1%A1%E6%9D%A1%E4%BB%B6%E6%8E%92%E5%BA%8F/</url>
    
    <content type="html"><![CDATA[<p>上代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-comment">// 根据创建时间排序</span><br>Collections.sort(receivableDataList, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Comparator</span>&lt;SaveAccruedItemData&gt;() &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">compare</span><span class="hljs-params">(SaveAccruedItemData o1, SaveAccruedItemData o2)</span> &#123;<br>        <span class="hljs-comment">// 需要比较的属性</span><br>        <span class="hljs-type">Date</span> <span class="hljs-variable">key1</span> <span class="hljs-operator">=</span> o1.getOrderCreateTime();<br>        <span class="hljs-type">Date</span> <span class="hljs-variable">key2</span> <span class="hljs-operator">=</span> o2.getOrderCreateTime();<br>        <span class="hljs-comment">// 如果key1大返回1 否则（如果key1小于key2 返回-1 否则返回0）</span><br>        <span class="hljs-keyword">return</span> key1.compareTo(key2);<br>    &#125;<br>&#125;);<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>编程经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ParallelStream的使用与问题</title>
    <link href="/2023/02/08/ParallelStream%E7%9A%84%E4%BD%BF%E7%94%A8%E4%B8%8E%E9%97%AE%E9%A2%98/"/>
    <url>/2023/02/08/ParallelStream%E7%9A%84%E4%BD%BF%E7%94%A8%E4%B8%8E%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>parallelStream是Java流式集合操作的一种，它会使用多线程执行循环，效率更高。</p><p>但是需要注意的是：</p><ol><li><p>数据没有很大的时候不要使用parallelStream可能比Stream还慢一些。</p></li><li><p>parallelStream的返回结果会打乱之前的List的顺序。</p></li><li><p><strong>parallelStream是线程不安全的</strong>，当你在遍历中使用，例如请求里面的数据时，就会报一个异常，这个异常就是多个线程执行，但是其他线程没有这个请求的数据，所以获取不到，<strong>解决办法是把需要的数据在遍历外面取到，再传递进去就可以解决</strong></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>编程经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java配合Mybatis实现分词匹配</title>
    <link href="/2023/02/08/Java%E9%85%8D%E5%90%88Mybatis%E5%AE%9E%E7%8E%B0%E5%88%86%E8%AF%8D%E5%8C%B9%E9%85%8D/"/>
    <url>/2023/02/08/Java%E9%85%8D%E5%90%88Mybatis%E5%AE%9E%E7%8E%B0%E5%88%86%E8%AF%8D%E5%8C%B9%E9%85%8D/</url>
    
    <content type="html"><![CDATA[<p>Java代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java">    <span class="hljs-keyword">public</span> List&lt;Label&gt; <span class="hljs-title function_">getRecommendLabel</span><span class="hljs-params">(String forumName)</span> &#123;<br>    <span class="hljs-keyword">if</span> (forumName == <span class="hljs-literal">null</span> || <span class="hljs-string">&quot;&quot;</span>.equals(forumName)) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br>    <span class="hljs-comment">// 将forumName 拆分分词 得到一个List</span><br>    <span class="hljs-type">Result</span> <span class="hljs-variable">parse</span> <span class="hljs-operator">=</span> ToAnalysis.parse(forumName);<br>    List&lt;Term&gt; terms = parse.getTerms();<br>    <br>    <span class="hljs-comment">// 使用这个list进行遍历模糊匹配</span><br>    List&lt;Label&gt; labels = labelMapper.getRecommendLabel(terms);<br><br>    <span class="hljs-keyword">return</span> labels;<br>&#125;<br></code></pre></td></tr></table></figure><p>MybatisXml:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs xml">    select<br>    <span class="hljs-tag">&lt;<span class="hljs-name">include</span> <span class="hljs-attr">refid</span>=<span class="hljs-string">&quot;Base_Column_List&quot;</span>/&gt;</span><br>    from label<br>    where state = 1 <br>    and(<br>    <span class="hljs-tag">&lt;<span class="hljs-name">foreach</span> <span class="hljs-attr">collection</span>=<span class="hljs-string">&quot;list&quot;</span> <span class="hljs-attr">item</span>=<span class="hljs-string">&quot;term&quot;</span> <span class="hljs-attr">separator</span>=<span class="hljs-string">&quot;or&quot;</span>&gt;</span><br>        label_name LIKE CONCAT(&#x27;%&#x27;, #&#123;term.name&#125;, &#x27;%&#x27;)<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">foreach</span>&gt;</span><br>)<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>编程经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>钩子函数的使用：注册监听JVM关闭</title>
    <link href="/2023/02/08/%E9%92%A9%E5%AD%90%E5%87%BD%E6%95%B0%E7%9A%84%E4%BD%BF%E7%94%A8%EF%BC%9A%E6%B3%A8%E5%86%8C%E7%9B%91%E5%90%ACJVM%E5%85%B3%E9%97%AD/"/>
    <url>/2023/02/08/%E9%92%A9%E5%AD%90%E5%87%BD%E6%95%B0%E7%9A%84%E4%BD%BF%E7%94%A8%EF%BC%9A%E6%B3%A8%E5%86%8C%E7%9B%91%E5%90%ACJVM%E5%85%B3%E9%97%AD/</url>
    
    <content type="html"><![CDATA[<p>代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><br>Runtime.getRuntime().addShutdownHook(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Thread</span>(() -&gt; &#123;<br>    System.out.println(<span class="hljs-string">&quot;### 收尾的工作&quot;</span>);<br>    <span class="hljs-type">int</span> <span class="hljs-variable">n</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span> (n &lt; <span class="hljs-number">10</span>) &#123;<br>        System.out.println(Thread.currentThread() + <span class="hljs-string">&quot;,&quot;</span> + n++);<br>        <span class="hljs-keyword">try</span> &#123;<br>            TimeUnit.SECONDS.sleep(<span class="hljs-number">1</span>);<br>        &#125; <span class="hljs-keyword">catch</span> (InterruptedException e) &#123;<br>            e.printStackTrace();<br>        &#125;<br>    &#125;<br>&#125;));<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>编程经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Spring事务设置手动回滚</title>
    <link href="/2023/02/08/Spring%E4%BA%8B%E5%8A%A1%E8%AE%BE%E7%BD%AE%E6%89%8B%E5%8A%A8%E5%9B%9E%E6%BB%9A/"/>
    <url>/2023/02/08/Spring%E4%BA%8B%E5%8A%A1%E8%AE%BE%E7%BD%AE%E6%89%8B%E5%8A%A8%E5%9B%9E%E6%BB%9A/</url>
    
    <content type="html"><![CDATA[<p>直接上代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 设置起始点</span><br><span class="hljs-type">Object</span> <span class="hljs-variable">savepoint</span> <span class="hljs-operator">=</span> TransactionAspectSupport.currentTransactionStatus().createSavepoint();<br><span class="hljs-keyword">try</span> &#123;<br>    <span class="hljs-built_in">this</span>.check(costAdjustId, userId);<br>&#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>    LOGGER.error(<span class="hljs-string">&quot;批量生成成本调整单 审核调整单异常！&quot;</span>);<br>    errorData.put(<span class="hljs-string">&quot;第&quot;</span> + i + <span class="hljs-string">&quot;行&quot;</span>, <span class="hljs-string">&quot;审核调整单失败！e：&quot;</span> + e.getLocalizedMessage());<br><br>    <span class="hljs-comment">// 设置手动回滚</span><br>    TransactionAspectSupport.currentTransactionStatus().rollbackToSavepoint(savepoint);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>编程经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>java操作服务器执行shell</title>
    <link href="/2023/02/08/java%E6%93%8D%E4%BD%9C%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%A7%E8%A1%8Cshell/"/>
    <url>/2023/02/08/java%E6%93%8D%E4%BD%9C%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%A7%E8%A1%8Cshell/</url>
    
    <content type="html"><![CDATA[<p>直接上代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 对象创建</span><br><span class="hljs-type">Connection</span> <span class="hljs-variable">connection</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Connection</span>(host, port);<br><span class="hljs-comment">// 登录鉴权</span><br>connection.authenticateWithPassword(userName, password);<br><span class="hljs-comment">// 获取session</span><br><span class="hljs-type">Session</span> <span class="hljs-variable">session</span> <span class="hljs-operator">=</span> con.openSession();<br><span class="hljs-comment">// 执行命令</span><br>session.execCommand(cmds);<br><br><span class="hljs-type">InputStream</span> <span class="hljs-variable">stdOut</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StreamGobbler</span>(session.getStdout());<br><span class="hljs-type">String</span> <span class="hljs-variable">outStr</span> <span class="hljs-operator">=</span> processStream(stdOut, CHARSET);<br>logger.info(<span class="hljs-string">&quot;输出结果：&quot;</span>+ outStr);<br><br><span class="hljs-type">InputStream</span> <span class="hljs-variable">stdErr</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StreamGobbler</span>(session.getStderr());<br><span class="hljs-type">String</span> <span class="hljs-variable">outErr</span> <span class="hljs-operator">=</span> processStream(stdErr, CHARSET);<br>session.waitForCondition(ChannelCondition.EXIT_STATUS, TIME_OUT);<br>logger.info(<span class="hljs-string">&quot;执行命令&quot;</span> + cmds + <span class="hljs-string">&quot;,错误信息：&quot;</span>+ outErr);<br><br><span class="hljs-comment">// 关闭连接</span><br>session.getExitStatus();<br>session.close();<br></code></pre></td></tr></table></figure><p>其中processStream方法代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">processStream</span><span class="hljs-params">(InputStream in, String charset)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br><span class="hljs-type">StringBuilder</span> <span class="hljs-variable">sb</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StringBuilder</span>();<br>    <span class="hljs-type">BufferedReader</span> <span class="hljs-variable">br</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BufferedReader</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">InputStreamReader</span>(in));<br>    <span class="hljs-keyword">while</span> (<span class="hljs-literal">true</span>) &#123;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">line</span> <span class="hljs-operator">=</span> br.readLine();<br>        <span class="hljs-keyword">if</span>(line == <span class="hljs-literal">null</span>)&#123;<br>        <span class="hljs-keyword">break</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(!line.trim().equals(<span class="hljs-string">&quot;&quot;</span>))&#123;<br>        sb.append(line).append(<span class="hljs-string">&quot;\n&quot;</span>);<br>        &#125;      <br>    &#125;<br>    <span class="hljs-keyword">return</span> sb.toString();<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>编程经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git的储藏弹出与摘取的用法</title>
    <link href="/2023/02/08/Git%E7%9A%84%E5%82%A8%E8%97%8F%E5%BC%B9%E5%87%BA%E4%B8%8E%E6%91%98%E5%8F%96%E7%9A%84%E7%94%A8%E6%B3%95/"/>
    <url>/2023/02/08/Git%E7%9A%84%E5%82%A8%E8%97%8F%E5%BC%B9%E5%87%BA%E4%B8%8E%E6%91%98%E5%8F%96%E7%9A%84%E7%94%A8%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h4 id="Git的储藏弹出与摘取什么时候可以用到？"><a href="#Git的储藏弹出与摘取什么时候可以用到？" class="headerlink" title="Git的储藏弹出与摘取什么时候可以用到？"></a>Git的储藏弹出与摘取什么时候可以用到？</h4><p>例：<br>问题：你本来是要在b分支上开发，但是你却在a分支上已经开发完了，这个时候，你需要将你在a分支上写的代码“剪切”到b分支上。</p><p>解决方法：<br>①：当你未提交代码时：<br>使用Git的储藏与弹出。 在你开发的a分支上，使用同步里的储藏功能，然后切换到你需要开发的b分支上，使用同步里的弹出功能，即可。<br>②：当你已提交代码时：<br>使用Git的摘取，切换到你需要开发的b分支上，使用摘取功能。</p>]]></content>
    
    
    <categories>
      
      <category>编程经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>语雀知识库导出md格式到本地</title>
    <link href="/2023/02/08/%E8%AF%AD%E9%9B%80%E7%9F%A5%E8%AF%86%E5%BA%93%E5%AF%BC%E5%87%BAmd%E6%A0%BC%E5%BC%8F%E5%88%B0%E6%9C%AC%E5%9C%B0/"/>
    <url>/2023/02/08/%E8%AF%AD%E9%9B%80%E7%9F%A5%E8%AF%86%E5%BA%93%E5%AF%BC%E5%87%BAmd%E6%A0%BC%E5%BC%8F%E5%88%B0%E6%9C%AC%E5%9C%B0/</url>
    
    <content type="html"><![CDATA[<h4 id="1-获取语雀个人开发者Token"><a href="#1-获取语雀个人开发者Token" class="headerlink" title="1. 获取语雀个人开发者Token"></a>1. 获取语雀个人开发者Token</h4><p>访问：<a href="https://www.yuque.com/yuque/developer/api#785a3731">https://www.yuque.com/yuque/developer/api#785a3731</a></p><h4 id="2-安装nodeJs"><a href="#2-安装nodeJs" class="headerlink" title="2. 安装nodeJs"></a>2. 安装nodeJs</h4><h4 id="3-导出"><a href="#3-导出" class="headerlink" title="3. 导出"></a>3. 导出</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">以下命令为Windows系统操作</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">安装node依赖</span><br>npm i -g yuque-exporter --registry=https://registry.npmmirror.com<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置token环境变量</span><br>set YUQUE_TOKEN=&lt;your_token&gt;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">导出全部知识库到当前文件夹</span><br>yuque-exporter &lt;个人账号，如:chenxin-uxuze&gt;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>其他</category>
      
    </categories>
    
    
    <tags>
      
      <tag>语雀</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于MybatisPlus分页最多只能查询500条</title>
    <link href="/2023/02/08/%E5%85%B3%E4%BA%8EMybatisPlus%E5%88%86%E9%A1%B5%E6%9C%80%E5%A4%9A%E5%8F%AA%E8%83%BD%E6%9F%A5%E8%AF%A2500%E6%9D%A1/"/>
    <url>/2023/02/08/%E5%85%B3%E4%BA%8EMybatisPlus%E5%88%86%E9%A1%B5%E6%9C%80%E5%A4%9A%E5%8F%AA%E8%83%BD%E6%9F%A5%E8%AF%A2500%E6%9D%A1/</url>
    
    <content type="html"><![CDATA[<h4 id="源码跟踪分析"><a href="#源码跟踪分析" class="headerlink" title="源码跟踪分析"></a>源码跟踪分析</h4><ol><li>所有的使用自带的Page对象分页的方法全部被限制了500条，所以很容易想到是对Page类中的size属性做了限制。</li><li>查看Page类中的setSize方法的调用方，找到PaginationInterceptor类<ol><li><img src="/2023/02/08/%E5%85%B3%E4%BA%8EMybatisPlus%E5%88%86%E9%A1%B5%E6%9C%80%E5%A4%9A%E5%8F%AA%E8%83%BD%E6%9F%A5%E8%AF%A2500%E6%9D%A1/1675757263070-13603bf4-3db0-43c7-843c-bdb0ec7af716.png" alt="image"></li><li><img src="/2023/02/08/%E5%85%B3%E4%BA%8EMybatisPlus%E5%88%86%E9%A1%B5%E6%9C%80%E5%A4%9A%E5%8F%AA%E8%83%BD%E6%9F%A5%E8%AF%A2500%E6%9D%A1/1675757312653-eb51281d-60fd-4c0e-8669-784e7f5f59ec.png" alt="image"></li><li><img src="/2023/02/08/%E5%85%B3%E4%BA%8EMybatisPlus%E5%88%86%E9%A1%B5%E6%9C%80%E5%A4%9A%E5%8F%AA%E8%83%BD%E6%9F%A5%E8%AF%A2500%E6%9D%A1/1675757441537-ad827cc7-452c-4088-9cd8-f2737f29e4b8.png" alt="image"></li></ol></li></ol><p><a name="rpz1A"></a></p><h4 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h4><p>修改PaginationInterceptor类中的limit属性。<br>将以下代码放入application启动类中：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Bean</span><br><span class="hljs-keyword">public</span> PaginationInterceptor <span class="hljs-title function_">paginationInterceptor</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">PaginationInterceptor</span> <span class="hljs-variable">paginationInterceptor</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PaginationInterceptor</span>();<br>    <span class="hljs-comment">// 设置请求的页面大于最大页后操作， true调回到首页，false 继续请求  默认false</span><br>    <span class="hljs-comment">// paginationInterceptor.setOverflow(false);</span><br>    <span class="hljs-comment">// 设置最大单页限制数量，默认 500 条，-1 不受限制</span><br>     paginationInterceptor.setLimit(-<span class="hljs-number">1</span>);<br>    <span class="hljs-comment">// 开启 count 的 join 优化,只针对部分 left join</span><br>    paginationInterceptor.setCountSqlParser(<span class="hljs-keyword">new</span> <span class="hljs-title class_">JsqlParserCountOptimize</span>(<span class="hljs-literal">true</span>));<br>    <span class="hljs-keyword">return</span> paginationInterceptor;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>编程经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>链路追踪Skywalking+MySQL实战部署</title>
    <link href="/2023/02/03/%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AASkywalking-MySQL%E5%AE%9E%E6%88%98%E9%83%A8%E7%BD%B2/"/>
    <url>/2023/02/03/%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AASkywalking-MySQL%E5%AE%9E%E6%88%98%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<h2 id="一、链路追踪skywalking"><a href="#一、链路追踪skywalking" class="headerlink" title="一、链路追踪skywalking"></a>一、链路追踪skywalking</h2><h3 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h3><ul><li>什么是链路追踪</li></ul><p>随着微服务分布式系统变得日趋复杂，越来越多的组件开始走向分布式化，如分布式服务、分布式数据库、分布式缓存等，使得后台服务构成了一种复杂的分布式网络。在服务能力提升的同时，复杂的网络结构也使问题定位更加困难。在一个请求在经过诸多服务过程中，出现了某一个调用失败的情况，查询具体的异常由哪一个服务引起的就变得十分抓狂，问题定位和处理效率是也会非常低。</p><p>分布式链路追踪就是将一次分布式请求还原成调用链路，将一次分布式请求的调用情况集中展示，比如各个服务节点上的耗时、请求具体到达哪台机器上、每个服务节点的请求状态等等。</p><ul><li>为什么要使用链路追踪</li></ul><p>链路追踪为分布式应用的开发者提供了完整的调用链路还原、调用请求量统计、链路拓扑、应用依赖分析等工具，可以帮助开发者快速分析和诊断分布式应用架构下的性能瓶颈，提高微服务时代下的开发诊断效率。</p><ul><li>skywalking 链路追踪</li></ul><p>SkyWalking是一个可观测性分析平台（Observability Analysis Platform 简称OAP）和应用性能管理系统（Application Performance Management 简称 APM）。</p><p>提供分布式链路追踪，服务网格（Service Mesh）遥测分析，度量（Metric）聚合和可视化一体化解决方案。</p><p>SkyWalking 特点</p><ul><li>多语言自动探针，java，.Net Code ,Node.Js</li><li>多监控手段，语言探针和Service Mesh</li><li>轻量高效，不需要额外搭建大数据平台</li><li>模块化架构，UI ，存储《集群管理多种机制可选</li><li>支持警告</li><li>优秀的可视化效果。</li></ul><h2 id="二、Skywalking环境部署"><a href="#二、Skywalking环境部署" class="headerlink" title="二、Skywalking环境部署"></a>二、Skywalking环境部署</h2><h3 id="2-1-简介"><a href="#2-1-简介" class="headerlink" title="2.1 简介"></a>2.1 简介</h3><p>部署版本：skywalking8.5</p><p>skywalking环境主要分为三个部分：</p><ol><li>skywalking-oap 核心服务</li><li>skywalking-ui  可视化操作界面</li><li>skywalking-agent 需要部署到监控的每个微服务中，起到发送监控数据到skywalking-oap中的作用</li></ol><p><img src="/2023/02/03/%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AASkywalking-MySQL%E5%AE%9E%E6%88%98%E9%83%A8%E7%BD%B2/skywalking-%E6%97%B6%E5%BA%8F%E5%9B%BE.svg" alt="img"></p><h3 id="2-2-Docker单机部署"><a href="#2-2-Docker单机部署" class="headerlink" title="2.2 Docker单机部署"></a>2.2 Docker单机部署</h3><h4 id="skywalking-oap部署"><a href="#skywalking-oap部署" class="headerlink" title="skywalking-oap部署"></a>skywalking-oap部署</h4><ol><li>启动容器需要修改oap-server中的配置：注册中心配置（没有可以不配置）、持久化配置。<ol><li>配置文件地址：apache-skywalking-apm根目录 -&gt; config -&gt; application.yml</li><li>个人不建议在此文件中配置，可以使用环境变量替换配置值</li></ol></li><li>如果需要使用MySQL做持久化，还需要将mysql-connector-java.jar传入到skywalking-oap容器内部的&#x2F;skywalking&#x2F;oap-libs&#x2F;目录下。</li><li>制作Dockerfile</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell">FROM apache/skywalking-oap-server:8.5.0-es7<br>MAINTAINER chenxin<br>COPY oap-libs/mysql-connector-java-5.1.47.jar /skywalking/oap-libs/mysql-connector-java-5.1.47.jar<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">【可选】告警功能配置 详细见下文告警功能配置部分</span><br>COPY alarm-settings.yml /skywalking/config/alarm-settings.yml<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">声明容器访问端口</span><br>EXPOSE 1234<br>EXPOSE 11800<br>EXPOSE 12800<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">环境变量</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">持久化使用MySQL</span><br>ENV SW_STORAGE=mysql SW_JDBC_URL=&quot;jdbc:mysql://xxx.xx.xx.xx:3306/skywalking&quot; SW_DATA_SOURCE_USER=root SW_DATA_SOURCE_PASSWORD=123456<br><span class="hljs-meta prompt_"># </span><span class="language-bash">数据清理间隔日期：1天</span><br>ENV SW_CORE_METRICS_DATA_TTL=1 SW_CORE_RECORD_DATA_TTL=1<br></code></pre></td></tr></table></figure><ol><li>容器启动命令</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">启动容器</span><br>docker run --name skywalking-mysql -d \<br>-p 1234:1234 -p 11800:11800 -p 12800:12800 --restart always skywalking-mysql<br></code></pre></td></tr></table></figure><h4 id="skywalking-ui部署"><a href="#skywalking-ui部署" class="headerlink" title="skywalking-ui部署"></a>skywalking-ui部署</h4><ol><li>只需要配置skywalking-oap-server的地址即可，直接使用docker run命令启动</li><li>容器启动命令。 [skywalking-mysql]是skywalking-oap的容器名</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run --name skywalking-mysql-ui -d -p 8888:8080 --restart always \<br>--link skywalking-mysql -e SW_OAP_ADDRESS=skywalking-mysql:12800 \<br>apache/skywalking-ui:8.5.0<br></code></pre></td></tr></table></figure><h2 id="三、项目接入部署"><a href="#三、项目接入部署" class="headerlink" title="三、项目接入部署"></a>三、项目接入部署</h2><h3 id="3-1-在服务中部署agent代理"><a href="#3-1-在服务中部署agent代理" class="headerlink" title="3.1 在服务中部署agent代理"></a>3.1 在服务中部署agent代理</h3><h4 id="1-服务部署添加agent"><a href="#1-服务部署添加agent" class="headerlink" title="1. 服务部署添加agent"></a>1. 服务部署添加agent</h4><ol><li>将skywalking-agent中agent目录放入容器中，如下图的：COPY skywalking-agent&#x2F;agent &#x2F;agent&#x2F;</li><li>修改环境遍历配置，指定skywalking-oap-server的地址</li><li>在Java启动命令中使用javaagent命令配置代理信息</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell">FROM java:8<br>MAINTAINER chenxin<br>COPY java-study-1.0-SNAPSHOT.jar java-study.jar<br>EXPOSE 8080<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">1. 将skywalking-agent中agent目录放入容器中</span><br>COPY skywalking-agent/agent /agent/<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">开启追踪白名单插件（文件在skywalking-agent项目包内）</span><br>COPY agent/optional-plugins/apm-trace-ignore-plugin-8.5.0.jar /agent/plugins/apm-trace-ignore-plugin-8.5.0.jar<br><span class="hljs-meta prompt_"># </span><span class="language-bash">配置追踪白名单（见下文）</span><br>COPY apm-trace-ignore-plugin.config /agent/config/apm-trace-ignore-plugin.config<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">2. 环境变量配置 接入我们的skywalking-server</span><br>ENV SW_AGENT_COLLECTOR_BACKEND_SERVICES=xxx.xxx.xx.xx:11800 SW_GRPC_LOG_SERVER_HOST=xxx.xxx.xx.xx<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">3. 勾子配置  -javaagent:/agent/skywalking-agent.jar=agent.service_name=java-study</span><br>ENTRYPOINT [&quot;java&quot;, &quot;-javaagent:/agent/skywalking-agent.jar=agent.service_name=java-study&quot;,&quot;-Duser.timezone=GMT+08&quot;,&quot;-Xms128m&quot;,&quot;-Xmx128m&quot;, &quot;-jar&quot;, &quot;java-study.jar&quot;]<br></code></pre></td></tr></table></figure><h4 id="2-追踪白名单配置"><a href="#2-追踪白名单配置" class="headerlink" title="2. 追踪白名单配置"></a>2. 追踪白名单配置</h4><p>防止redis、注册中心等心跳检测，以及Mysql的连接请求刷出大量追踪记录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim apm-trace-ignore-plugin.config<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">写入以下内容</span><br>trace.ignore_path=$&#123;SW_AGENT_TRACE_IGNORE_PATH:Redisson/**,Mysql/JDBI/Connection/**,Mysql/JDBI/Statement/**&#125;<br></code></pre></td></tr></table></figure><h4 id="2-应用日志打印加入追踪id（定位日志）"><a href="#2-应用日志打印加入追踪id（定位日志）" class="headerlink" title="2. 应用日志打印加入追踪id（定位日志）"></a>2. 应用日志打印加入追踪id（定位日志）</h4><p>具体配置见下文 3.2</p><h2 id="四、可选配置"><a href="#四、可选配置" class="headerlink" title="四、可选配置"></a>四、可选配置</h2><h3 id="4-1-告警功能配置【可选】"><a href="#4-1-告警功能配置【可选】" class="headerlink" title="4.1 告警功能配置【可选】"></a>4.1 告警功能配置【可选】</h3><ol><li>修改替换skywalking-oap-server中的config&#x2F;alarm-settings.yml文件，修改其中webhooks地址(通知地址)</li><li>实现通知notify接口（接口只能为POST）</li></ol><h3 id="4-2-应用日志打印加入追踪id（定位日志）"><a href="#4-2-应用日志打印加入追踪id（定位日志）" class="headerlink" title="4.2 应用日志打印加入追踪id（定位日志）"></a>4.2 应用日志打印加入追踪id（定位日志）</h3><p>方案：修改项目日志打印格式，配置自定义参数tradeId，使每一行日志都能输出对应追踪id。</p><p>详情可以参考我的另一篇文章：关于Java配置自定义日志格式、自定义参数问题</p><p>使用示例：</p><p><img src="/2023/02/03/%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AASkywalking-MySQL%E5%AE%9E%E6%88%98%E9%83%A8%E7%BD%B2/log_1.png" alt="img"></p><p><img src="/2023/02/03/%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AASkywalking-MySQL%E5%AE%9E%E6%88%98%E9%83%A8%E7%BD%B2/trade_1.png" alt="img"></p>]]></content>
    
    
    <categories>
      
      <category>架构</category>
      
    </categories>
    
    
    <tags>
      
      <tag>中间件部署</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL运维常用SQL命令</title>
    <link href="/2023/02/03/MySQL%E8%BF%90%E7%BB%B4%E5%B8%B8%E7%94%A8SQL%E5%91%BD%E4%BB%A4/"/>
    <url>/2023/02/03/MySQL%E8%BF%90%E7%BB%B4%E5%B8%B8%E7%94%A8SQL%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h3 id="常用查询命令"><a href="#常用查询命令" class="headerlink" title="常用查询命令"></a>常用查询命令</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 查询全表数据容量大小</span><br><span class="hljs-keyword">select</span><br>table_schema <span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;数据库&#x27;</span>,<br>table_name <span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;表名&#x27;</span>,<br>table_rows <span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;记录数&#x27;</span>,<br><span class="hljs-keyword">truncate</span>(data_length<span class="hljs-operator">/</span><span class="hljs-number">1024</span><span class="hljs-operator">/</span><span class="hljs-number">1024</span>, <span class="hljs-number">2</span>) <span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;数据容量(MB)&#x27;</span>,<br><span class="hljs-keyword">truncate</span>(index_length<span class="hljs-operator">/</span><span class="hljs-number">1024</span><span class="hljs-operator">/</span><span class="hljs-number">1024</span>, <span class="hljs-number">2</span>) <span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;索引容量(MB)&#x27;</span><br><span class="hljs-keyword">from</span> information_schema.tables<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> data_length <span class="hljs-keyword">desc</span>, index_length <span class="hljs-keyword">desc</span>;<br></code></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 查询正在运行的SQL及运行状态</span><br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> information_schema.INNODB_TRX<br></code></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 查询正在被使用的表</span><br><span class="hljs-keyword">show</span> <span class="hljs-keyword">OPEN</span> TABLES <span class="hljs-keyword">where</span> In_use <span class="hljs-operator">&gt;</span> <span class="hljs-number">0</span>;<br></code></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 查询被锁住了的表</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> INFORMATION_SCHEMA.INNODB_LOCKS;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>数据库</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL</tag>
      
      <tag>工具方法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于Java配置自定义日志格式问题</title>
    <link href="/2023/02/03/%E5%85%B3%E4%BA%8E%E4%BF%AE%E6%94%B9Java%E9%A1%B9%E7%9B%AE%E6%97%A5%E5%BF%97%E6%A0%BC%E5%BC%8F%E9%97%AE%E9%A2%98/"/>
    <url>/2023/02/03/%E5%85%B3%E4%BA%8E%E4%BF%AE%E6%94%B9Java%E9%A1%B9%E7%9B%AE%E6%97%A5%E5%BF%97%E6%A0%BC%E5%BC%8F%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h3 id="常见的日志框架及修改方式"><a href="#常见的日志框架及修改方式" class="headerlink" title="常见的日志框架及修改方式"></a>常见的日志框架及修改方式</h3><blockquote><p>如果要修改项目的日志输出格式，首先需要明确，当前项目使用的是哪种日志输出框架。</p></blockquote><h4 id="Logback日志（spring项目默认）"><a href="#Logback日志（spring项目默认）" class="headerlink" title="Logback日志（spring项目默认）"></a>Logback日志（spring项目默认）</h4><ol><li><p>引入logback-spring.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span> <span class="hljs-attr">scan</span>=<span class="hljs-string">&quot;false&quot;</span> <span class="hljs-attr">scanPeriod</span>=<span class="hljs-string">&quot;60 seconds&quot;</span> <span class="hljs-attr">debug</span>=<span class="hljs-string">&quot;false&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">contextName</span>&gt;</span>logback<span class="hljs-tag">&lt;/<span class="hljs-name">contextName</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--这里对应项目的基础配置文件--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">resource</span>=<span class="hljs-string">&quot;application.yml&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">springProperty</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&quot;context&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;serverName&quot;</span> <span class="hljs-attr">source</span>=<span class="hljs-string">&quot;spring.application.name&quot;</span>/&gt;</span><br><br>    <span class="hljs-comment">&lt;!--配置自定义参数规则类的位置--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">conversionRule</span> <span class="hljs-attr">conversionWord</span>=<span class="hljs-string">&quot;traceId&quot;</span> <span class="hljs-attr">converterClass</span>=<span class="hljs-string">&quot;cn.xxx.LogbackTradeConverterConfig&quot;</span> /&gt;</span><br><br>    <span class="hljs-comment">&lt;!--输出到控制台--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">appender</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;console&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.core.ConsoleAppender&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.classic.filter.LevelFilter&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">level</span>&gt;</span>INFO<span class="hljs-tag">&lt;/<span class="hljs-name">level</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">filter</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">encoder</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">pattern</span>&gt;</span>%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%thread] tradeId:[%traceId] %-5level %logger&#123;36&#125; - %msg %n<span class="hljs-tag">&lt;/<span class="hljs-name">pattern</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">encoder</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">appender</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">appender</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;file&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span>&gt;</span><span class="hljs-comment">&lt;!-- 日志文件会滚动 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.classic.filter.LevelFilter&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">level</span>&gt;</span>INFO<span class="hljs-tag">&lt;/<span class="hljs-name">level</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">filter</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">encoder</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">pattern</span>&gt;</span>%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%thread] tradeId:[%traceId] %-5level %logger&#123;36&#125; - %msg %n<span class="hljs-tag">&lt;/<span class="hljs-name">pattern</span>&gt;</span> <span class="hljs-comment">&lt;!-- 日志文件中日志的格式 --&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">encoder</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">appender</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">root</span> <span class="hljs-attr">level</span>=<span class="hljs-string">&quot;info&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">appender-ref</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;console&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">appender-ref</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;file&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">root</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>application.yml中加入配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">logging:</span><br>  <span class="hljs-attr">config:</span> <span class="hljs-string">classpath:logback-spring.xml</span><br></code></pre></td></tr></table></figure></li><li><p>自定义参数赋值配置 - 基础ClassicConverter</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">LogbackTradeConverterConfig</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">ClassicConverter</span> &#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">convert</span><span class="hljs-params">(ILoggingEvent iLoggingEvent)</span> &#123;<br>        <span class="hljs-comment">// 返回skywalking追踪id</span><br>        <span class="hljs-keyword">return</span> TraceContext.traceId();<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure></li></ol><h4 id="Log4j"><a href="#Log4j" class="headerlink" title="Log4j"></a>Log4j</h4><ol><li><p>修改项目日志框架为log4j2</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 日志框架改为使用log4j2 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">exclusions</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">exclusion</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-logging<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">exclusion</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">exclusions</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-log4j2<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>引入配置文件 log4j2.yml</p><p>其中%X{ip} 以及 %X{tradeId} 都是自定义参数</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">Appenders:</span><br>  <span class="hljs-attr">Console:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">CONSOLE</span><br>    <span class="hljs-attr">target:</span> <span class="hljs-string">SYSTEM_OUT</span><br>    <span class="hljs-attr">PatternLayout:</span><br>      <span class="hljs-attr">pattern:</span> <span class="hljs-string">&quot;%d [%X&#123;ip&#125;] [%X&#123;traceId&#125;] %-5p %m [%t] (%c) (%F:%L) %n&quot;</span><br><br><span class="hljs-attr">Loggers:</span><br>  <span class="hljs-attr">Root:</span><br>    <span class="hljs-attr">level:</span> <span class="hljs-string">info</span><br>    <span class="hljs-attr">AppenderRef:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">ref:</span> <span class="hljs-string">CONSOLE</span><br></code></pre></td></tr></table></figure></li><li><p>修改application.yml 配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">logging:</span><br>  <span class="hljs-attr">config:</span> <span class="hljs-string">classpath:log4j2.yml</span><br></code></pre></td></tr></table></figure></li><li><p>自定义参数赋值 - 过滤器实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Configuration</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Log4jFilter</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Filter</span> &#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">init</span><span class="hljs-params">(FilterConfig filterConfig)</span> &#123;<br>        <span class="hljs-comment">// TODO Auto-generated method stub</span><br>    &#125;<br><br>    <span class="hljs-meta">@Trace</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doFilter</span><span class="hljs-params">(ServletRequest request, ServletResponse response, FilterChain chain)</span><br>            <span class="hljs-keyword">throws</span> IOException, ServletException &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">ip</span> <span class="hljs-operator">=</span> request.getRemoteAddr();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">traceId</span> <span class="hljs-operator">=</span> TraceContext.traceId();<br>        MDC.put(<span class="hljs-string">&quot;ip&quot;</span>, ip);<br>        MDC.put(<span class="hljs-string">&quot;traceId&quot;</span>, traceId);<br>        chain.doFilter(request, response);<br>        MDC.remove(<span class="hljs-string">&quot;ip&quot;</span>);<br>        MDC.remove(<span class="hljs-string">&quot;traceId&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">destroy</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-comment">// TODO Auto-generated method stub</span><br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <categories>
      
      <category>编程经验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
